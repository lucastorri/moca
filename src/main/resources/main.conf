
akka {

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }

  cluster {
    roles = ${resolve.roles}
    seed-nodes = ${resolve.seeds}
    auto-down-unreachable-after = 10s
  }

  remote {
    netty.tcp {
      port = ${resolve.port}
      hostname = ${resolve.host}
    }
  }

}

moca {

  minion {
    journal-plugin-id = "store.journal.mapdb"
  }

  master {
    journal-plugin-id = "store.journal.mapdb"
    snapshot-plugin-id = "store.snapshot.mapdb"
  }

}

store {

  journal {

    mem {
      class = "com.github.lucastorri.moca.store.journal.SharedInMemJournal"
      plugin-dispatcher = "akka.actor.default-dispatcher"
    }

    mapdb {
      class = "com.github.lucastorri.moca.store.journal.MapDBJournal"
      directory = "journals"
      plugin-dispatcher = "akka.actor.default-dispatcher"
    }

  }

  snapshot {

    mem {
      class = "com.github.lucastorri.moca.store.snapshot.SharedInMemSnapshot"
      plugin-dispatcher = "akka.actor.default-dispatcher"
    }

    mapdb {
      class = "com.github.lucastorri.moca.store.snapshot.MapDBSnapshot"
      directory = "snapshots"
      plugin-dispatcher = "akka.actor.default-dispatcher"
    }

  }

}
